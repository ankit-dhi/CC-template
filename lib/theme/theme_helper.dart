import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA70001,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(31.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.gray200,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(31.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 5,
        space: 5,
        color: appTheme.gray30001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 16.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray30002,
          fontSize: 14.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray30005,
          fontSize: 11.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 34.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.yellow100,
          fontSize: 30.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w100,
        ),
        headlineMedium: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 28.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray30003,
          fontSize: 24.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w400,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray30001,
          fontSize: 20.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w300,
        ),
        titleMedium: TextStyle(
          color: appTheme.indigo50,
          fontSize: 18.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray30003,
          fontSize: 14.fSize,
          fontFamily: 'HelveticaNeue',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF8E97FD),
    primaryContainer: Color(0XFF1F265E),
    secondaryContainer: Color(0XFFFF7C6B),

    // Error colors
    errorContainer: Color(0XFF67548B),
    onError: Color(0XFF7F89FF),
    onErrorContainer: Color(0XF202133F),

    // On colors(text colors)
    onPrimary: Color(0XFF03174C),
    onPrimaryContainer: Color(0XFFF5E2D5),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber100 => Color(0XFFFFE7BF);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue200 => Color(0XFFA5C0EA);

  // BlueGray
  Color get blueGray100 => Color(0XFFD2D4DE);
  Color get blueGray20067 => Color(0X67ADB7D8);
  Color get blueGray300 => Color(0XFFA0A3B1);
  Color get blueGray30001 => Color(0XFFA0A3B2);
  Color get blueGray30002 => Color(0XFF98A1BD);
  Color get blueGray30003 => Color(0XFFA1A4B2);
  Color get blueGray30004 => Color(0XFFA3A6B5);
  Color get blueGray30005 => Color(0XFF98A0BD);
  Color get blueGray30006 => Color(0XFF9B9DB4);
  Color get blueGray50 => Color(0XFFF0F0F2);
  Color get blueGray500 => Color(0XFF576893);
  Color get blueGray50001 => Color(0XFF586894);
  Color get blueGray600 => Color(0XFF5A6175);
  Color get blueGray60001 => Color(0XFF5C6092);
  Color get blueGray700 => Color(0XFF554872);
  Color get blueGray70001 => Color(0XFF524F53);
  Color get blueGray70002 => Color(0XFF4E5567);
  Color get blueGray70087 => Color(0X8747557E);
  Color get blueGray800 => Color(0XFF3F414E);
  Color get blueGray80001 => Color(0XFF3F4553);
  Color get blueGray900 => Color(0XFF333242);
  Color get blueGray90001 => Color(0XFF02164C);
  Color get blueGray90002 => Color(0XFF263238);

  // DeepOrange
  Color get deepOrange200 => Color(0XFFEDC59F);
  Color get deepOrange20001 => Color(0XFFFEB18F);
  Color get deepOrange400 => Color(0XFFFA6E5A);
  Color get deepOrangeA100 => Color(0XFFF4A17C);

  // Gray
  Color get gray100 => Color(0XFFFAF6F2);
  Color get gray10001 => Color(0XFFF2F3F7);
  Color get gray10002 => Color(0XFFF6F1FA);
  Color get gray10003 => Color(0XFFF6F1FB);
  Color get gray10004 => Color(0XFFF2F2F7);
  Color get gray10005 => Color(0XFFF5F5F9);
  Color get gray10006 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFEBEAEC);
  Color get gray300 => Color(0XFFE0E1E5);
  Color get gray30001 => Color(0XFFE6E6E6);
  Color get gray400 => Color(0XFFBABBC5);
  Color get gray40001 => Color(0XFFB5B7BF);
  Color get gray40002 => Color(0XFFC4C5CA);
  Color get gray50 => Color(0XFFFBFBFB);
  Color get gray5001 => Color(0XFFFAF8F5);
  Color get gray5002 => Color(0XFFFDF9F3);
  Color get gray5003 => Color(0XFFF8F9FF);
  Color get gray70019 => Color(0X1954575C);

  // Green
  Color get green300 => Color(0XFF6BB28D);
  Color get green30001 => Color(0XFF76C79E);
  Color get green30002 => Color(0XFF6CB28E);

  // Indigo
  Color get indigo100 => Color(0XFFB4BAFF);
  Color get indigo10001 => Color(0XFFB3B9FF);
  Color get indigo300 => Color(0XFF7583CA);
  Color get indigo30001 => Color(0XFF807AB0);
  Color get indigo400 => Color(0XFF6D74B0);
  Color get indigo40001 => Color(0XFF5E65BF);
  Color get indigo50 => Color(0XFFE6E7F2);
  Color get indigo500 => Color(0XFF4C53B4);
  Color get indigo5001 => Color(0XFFE3E5FD);
  Color get indigo800 => Color(0XFF3B3283);
  Color get indigo900 => Color(0XFF1E255E);
  Color get indigo90001 => Color(0XFF2A3166);
  Color get indigoA100 => Color(0XFFA6ACFA);
  Color get indigoA10001 => Color(0XFF9EA5FF);
  Color get indigoA10002 => Color(0XFF8589EB);
  Color get indigoA10003 => Color(0XFFA3AAFF);
  Color get indigoA10004 => Color(0XFF8C95FF);

  // LightBlue
  Color get lightBlue200 => Color(0XFF7FD2F2);

  // Lime
  Color get lime100 => Color(0XFFF7E8D0);
  Color get lime400 => Color(0XFFD3D265);

  // Orange
  Color get orange100 => Color(0XFFFDDDA5);
  Color get orange200 => Color(0XFFFFC97E);
  Color get orange20001 => Color(0XFFFAC978);
  Color get orange20002 => Color(0XFFF5C371);
  Color get orange20003 => Color(0XFFFFC772);
  Color get orange300 => Color(0XFFF1B869);
  Color get orange50 => Color(0XFFF2EBD6);
  Color get orangeA100 => Color(0XFFFFCF86);

  // Pink
  Color get pink200 => Color(0XFFD9A5B5);
  Color get pinkA100 => Color(0XFFFF84A2);

  // Red
  Color get red100 => Color(0XFFF1DDCF);
  Color get red200 => Color(0XFFD196A7);
  Color get red400 => Color(0XFFF05C47);
  Color get red500 => Color(0XFFEB4335);

  // Teal
  Color get teal100 => Color(0XFFAFDBC5);
  Color get teal200 => Color(0XFF84C6AE);
  Color get teal50 => Color(0XFFDEFDED);

  // White
  Color get whiteA700 => Color(0XFFFEFFFE);
  Color get whiteA70001 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow100 => Color(0XFFFFECCC);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
